// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef BASEPILOTABLE_H
#define BASEPILOTABLE_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "Encoder.h"
#include "ADIS16448_IMU.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class BasePilotable: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<SpeedController> moteurG;
	std::shared_ptr<SpeedController> moteurD;
	std::shared_ptr<RobotDrive> robotDrive;
	std::shared_ptr<Encoder> encoderG;
	std::shared_ptr<Encoder> encoderD;
	std::shared_ptr<ADIS16448_IMU> gyro;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:

	static double K_TURN;
	static double B_TURN;
	static double K_MOVE;
	static double B_MOVE;
	static double ACCEL_THRESHOLD;

	BasePilotable();
	void InitDefaultCommand();

	void Drive();

	void Drive(double move, double turn);

	void Stop();

	void Avancer(double value);
	void Tourner(double value);

	double GetEncoderG();
	double GetEncoderD();
	double GetGyro();

	double GetAccelY();

	void GyroReset();
	void EncoderReset();



	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
};

#endif
